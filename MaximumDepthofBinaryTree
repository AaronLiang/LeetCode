Maximum Depth of Binary TreeSep 30 '122349 / 3307
Given a binary tree, find its maximum depth.

The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.

/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
        public int maxDepth(TreeNode root) {
        // Start typing your Java solution below
        // DO NOT write main() function
      if (root == null) return 0;
		return maxHeight(root, 1,1);
    }
	
	public int maxHeight(TreeNode node, int current, int max){
		if(current > max) 
    		max = current;
       // if (node == null) return max;
			
		if(node.left != null){
			return maxHeight(node.left, ++current, max);
		}
		
		if(node.right != null){
			return maxHeight(node.right, ++current, max);
		}

		return max;
	}
}
