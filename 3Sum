3SumJan 18 '123944 / 14700
Given an array S of n integers, are there elements a, b, c in 
S such that a + b + c = 0? Find all unique triplets in the 
array which gives the sum of zero.

Note:

Elements in a triplet (a,b,c) must be in non-descending order. 
(ie, a ? b ? c)
The solution set must not contain duplicate triplets.
    For example, given array S = {-1 0 1 2 -1 -4},

    A solution set is:
    (-1, 0, 1)
    (-1, -1, 2)
    
        public ArrayList<ArrayList<Integer>> threeSum(int[] num) {
        // Start typing your Java solution below
        // DO NOT write main() function
        
        ArrayList<ArrayList<Integer>> lists = new ArrayList<ArrayList<Integer>>();
        
        if(num.length < 3) return lists;
        int counter = 0,index = 0, zeros = 0; 
        
        Arrays.sort(num);
        int[] num1 = num;
        
        if(num[0] == 0 && num[1] ==0 && num[2] ==0){
            ArrayList<Integer> array = new ArrayList<Integer>();
            array.add(0);
            array.add(0);
            array.add(0);
            lists.add(array);
            return lists;
        }
        
        for(int i = 0; i < num1.length-2; i++){
            if( i > 0 && num1[i] == num1[i-1]) continue;
            for(int j = i+1; j < num1.length-1; j++){
                 if( j > i+1 && num1[j] == num1[j-1]) continue;
                 for(int k = j+1; k < num1.length; k++){
                  if(k > j +1 && num1[k] == num1[k-1]) continue;  
                   if (num[k] == 0- num1[i]-num1[j]){
                       ArrayList<Integer> array = new ArrayList<Integer>();
                       array.add(num1[i]);
                       array.add(num1[j]);
                       array.add(num1[k]);
                       lists.add(array);
                   }
                 }
            }
        }
        return  lists; 
    }
