Minimum Depth of Binary TreeOct 10 '122754 / 6878
Given a binary tree, find its minimum depth.

The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node

/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public int minDepth(TreeNode root) {
        // Start typing your Java solution below
        // DO NOT write main() function
        if( root == null)  return 0;
        
        if(root.left == null && root.right != null)
           { return minDepth(root.right) +1;
           }else if (root.right == null && root.left != null){
               return minDepth(root.left) +1;
           }else if (root.right == null && root.left == null){
               return 1;
               
           }
           int left = minDepth(root.left)+1;
           int right = minDepth(root.right)+1;
           
           return Math.min(left, right);
    }
