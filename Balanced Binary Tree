Balanced Binary TreeOct 9 '122890 / 7110
Given a binary tree, determine if it is height-balanced.

For this problem, a height-balanced binary tree is defined as a 
binary tree in which the depth of the two subtrees of every node never differ by more than 1.
/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
     public boolean isBalanced(TreeNode root) {
    // Start typing your Java solution below
    // DO NOT write main() function
      if(root == null ) return true;
      
      int leftheight = max(root.left);
      int rightheight = max(root.right);
      
      if(Math.abs(leftheight - rightheight) > 1)
        return false;
        
        return isBalanced(root.left) && isBalanced(root.right);
    
     }
    
        public int max(TreeNode node){
          if(node == null) return 0;
          
          return 1 + Math.max(max(node.left), max(node.right));
        }
        
       // public int min(TreeNode node){
       //   if (node == null) return 0;
        //  
      //    return 1 + Math.min(min(node.left), min(node.right));
      //  }
}
